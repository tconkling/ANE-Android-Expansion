<?xml version="1.0" ?>
<project name="ANE-Google-Analytics" default="compile" basedir="../">

    <!-- Utilities -->
    <property file="build/build.properties"/>
    <property file="build/user.properties"/>

    <!-- Main targets -->

    <target name="clean" description="Remove all directories created during the build process">
        <echo>[clean] Removing Build directories</echo>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${dist.dir}" defaultexcludes="false">
                <include name="**/*"/>
            </fileset>
            <fileset dir="${doc.dir}" defaultexcludes="false">
                <include name="**/*"/>
            </fileset>
        </delete>
        <echo>[clean] Build directories removed</echo>
    </target>

    <target name="init" depends="clean"
            description="Create files and folders needed for the build process">

        <echo>[init] Creating Build directories</echo>
        <mkdir dir="${bin.dir}"/>
        <echo>[init] Build directories created</echo>
        <echo>[init] Generate temporary certificate</echo>
        <java jar="${FLEX_HOME}/lib/adt.jar" fork="true" failonerror="true">
            <arg line="-certificate"/>
            <arg line="-cn alebianco"/>
            <arg line="1024-RSA"/>
            <arg line="${crt.file}"/>
            <arg line="${crt.password}"/>
        </java>
        <echo>[init] Temporary certificate created</echo>
    </target>

    <target name="compile" depends="init,
                                    ext_and,ext_as3-default,ext_as3-android,
                                    ext_package,ext_clean"
            description="Build the extension"/>

    <target name="asdoc" depends="compile" description="Build Documentation">
        <echo>[asdoc] Generating ASDOC documentation</echo>
        <java jar="${FLEX_HOME}/lib/asdoc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
            <arg line="-external-library-path+=${src.def.dir}/libs"/>
            <arg line="-doc-sources+=${src.def.dir}/src"/>
            <arg line="-source-path+=${src.def.dir}/src"/>
            <arg line="-library-path+=libs/air"/>
            <arg line="-output ${doc.dir}"/>
            <arg value="-keep-xml=true"/>
            <arg value="-lenient=true"/>
            <arg line="-window-title '${project.name} ${version.num}'"/>
            <arg line="-main-title '${project.name} ${version.num}'"/>
            <arg line="-footer '${project.name} - http://alebianco.github.io/ANE-Google-Analytics'"/>
        </java>
        <delete dir="${bin.dir}/libs"/>
        <echo>[asdoc] ASDOC documentation generated successfully</echo>
    </target>

    <target name="package" depends="asdoc"
            description="Package the Build">

        <tstamp>
            <format property="touch.time" pattern="yyyyMMddhhmm" unit="hour"/>
        </tstamp>

        <echo>[package] Generating release package</echo>
        <mkdir dir="${dist.dir}"/>
        <copy file="${bin.dir}/${project.name.versioned}.swc" todir="${dist.dir}"/>
        <copy file="${bin.dir}/${project.name.versioned}.ane" todir="${dist.dir}"/>
        <copy todir="${dist.dir}/docs">
            <fileset dir="${doc.dir}"/>
        </copy>
        <delete dir="${dist.dir}/docs/tempdita"/>

        <copy file="LICENSE.md" tofile="${dist.dir}/license.txt" overwrite="true"/>
        <copy file="CHANGELOG.md" tofile="${dist.dir}/changelog.txt" overwrite="true"/>
        <copy file="README.md" tofile="${dist.dir}/readme.txt" overwrite="true"/>
        <zip destfile="${dist.dir}/${project.name.versioned}_${touch.time}.zip">
            <fileset dir="${dist.dir}"/>
        </zip>
        <delete file="${dist.dir}/${project.name.versioned}.swc"/>
        <delete file="${dist.dir}/${project.name.versioned}.ane"/>
        <delete file="${dist.dir}/license.txt"/>
        <delete file="${dist.dir}/changelog.txt"/>
        <delete file="${dist.dir}/readme.txt"/>
        <delete dir="${dist.dir}/docs"/>
        <delete dir="${doc.dir}/tempdita"/>
        <echo>[package] Release package created successfully</echo>
    </target>

    <!-- Compilation steps -->

    <target name="ext_and">
        <!-- Build Android native library -->
        <mkdir dir="${bin.and.dir}"/>
        <ant antfile="build.xml" target="-compile" dir="${src.and.dir}" inheritall="false">
            <property name="build.target" value="-compile"/>
            <property name="verbose" value="false"/>
            <property name="renderscript.opt.level" value="O0"/>
            <property name="env.ANDROID_HOME" value="${ANDROID_HOME}"/>
        </ant>
        <copy todir="${bin.and.dir}/downloader-res" overwrite="true">
            <fileset dir="${ext.dir}/android/play_apk_expansion/downloader_library/res"/>
        </copy>
        <copy file="${ext.dir}/android/air_extension/libs/commons-io-2.3.jar" todir="${bin.and.dir}" overwrite="true"/>
        <copy file="${ext.dir}/android/play_apk_expansion/downloader_library/bin/classes.jar" tofile="${bin.and.dir}/expansion-downloader.jar" overwrite="true"/>
        <copy file="${ext.dir}/android/play_apk_expansion/zip_file/bin/classes.jar" tofile="${bin.and.dir}/zip-file.jar" overwrite="true"/>
        <copy file="${ext.dir}/android/play_licensing/library/bin/classes.jar" tofile="${bin.and.dir}/play-licensing.jar" overwrite="true"/>
        <copy file="${ext.dir}/android/air_extension/bin/classes.jar" tofile="${bin.and.dir}/lib${project.name}.jar" overwrite="true"/>
    </target>

    <target name="ext_as3-default">
        <!-- Build Actionscript extension bridge for default target -->
        <mkdir dir="${tmp.dir}"/>
        <antcall target="ext_as3">
            <param name="source" value="${src.def.dir}"/>
            <param name="destination" value="${bin.def.dir}"/>
        </antcall>
        <copy file="${tmp.dir}/library.swc" tofile="${bin.dir}/${project.name.versioned}.swc"/>
        <delete dir="${tmp.dir}"/>
    </target>
    <target name="ext_as3-android">
        <!-- Build Actionscript extension bridge for android target -->
        <mkdir dir="${tmp.dir}"/>
        <antcall target="ext_as3">
            <param name="source" value="${src.as3.dir}"/>
            <param name="destination" value="${bin.and.dir}"/>
        </antcall>
        <delete dir="${tmp.dir}"/>
    </target>
    <target name="ext_as3">
        <!-- Build Actionscript extension bridge -->
        <java jar="${FLEX_HOME}/lib/compc-cli.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
            <arg line="-output ${tmp.dir}/library.swc"/>
            <arg line="-swf-version 14"/>
            <arg line="-include-sources+=${source}/src"/>
            <arg line="-library-path+='${source}/libs'"/>
            <arg line="-source-path+='./','${source}/src'"/>
            <arg line="-load-config=air-config.xml" />
            <arg line="-static-link-runtime-shared-libraries=true"/>
            <arg line="-verbose-stacktraces=true"/>
            <arg line="-headless-server=true"/>
        </java>
        <mkdir dir="${tmp.dir}/content"/>
        <unzip src="${tmp.dir}/library.swc" dest="${tmp.dir}/content" overwrite="true"/>
        <copy file="${tmp.dir}/content/library.swf" todir="${destination}"/>
    </target>

    <target name="ext_package">
        <!-- Package the final extension -->
        <java jar="${FLEX_HOME}/lib/adt.jar" fork="true" failonerror="true">
            <arg line="-package"/>
            <arg line="-storetype pkcs12"/>
            <arg line="-keystore ${crt.file}"/>
            <arg line="-storepass ${crt.password}"/>
            <arg line="-tsa none"/>
            <arg line="-target ane ${bin.dir}/${project.name.versioned}.ane ${extension.descriptor}"/>
            <arg line="-swc bin/${project.name.versioned}.swc"/>
            <arg line="-platform Android-ARM -C ${bin.and.dir} ."/>
            <arg line="-platformoptions ${basedir}/build/platform.xml"/>
            <arg line="-platform default -C ${bin.def.dir} ."/>
        </java>
    </target>

    <target name="ext_clean">
        <!-- Remove temporary files and folders created to build the project -->
        <delete dir="${bin.dir}/native"/>
        <delete dir="${bin.dir}/libs"/>
        <delete file="${crt.file}"/>
    </target>

</project>
